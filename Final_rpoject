#include<bits/stdc++.h>
#include<iostream>
#include<conio.h>
#include<dos.h>
#include<graphics.h>
#include<stdlib.h>
#include<process.h>
#include<string>

using namespace std;
int yo=130;
int x=20,y=80; //x, y->helicopter coordinates
int x2=500,a=25,b=15,s=50,e=310,x1=500,x3=500,x4=350,y56=200; //s->starting angle, e-> ending angle, a, b->radius for ellipse, 
int k=0,j=0,f=0,d=0,c=0,yc1,yc2,yc3,yc=250;
int i,o; //o for choices
int a1=0,a2=180,r=10; // r -> radius

int random(int po)
{
	return (rand()%po);
}

class player             // the player class 
{
	char name[50];
	int distance,points;
	public:
	void accept();
	int score(long int);
	int mycopter(int,int);
	int dist()              // calculates the distance the copter has travelled
	{
 		return distance;
	}
	int getpoints()         //calculates the points according to the distance travelled
	{
		return points;
	}
};

void about_Game()         //graphics design for about the game
{
	int x=50,y=150,r=20;
	//setbkcolor(9);
	setcolor(YELLOW);
	ellipse(340,200-10,198,190,250,140);
	arc(81,195+20,250,0,12);
	arc(93,198+22,206,300,17);
	
	
	arc(75,135+55+10,90,180,15);
	arc(25,135+55+10,0,90,15);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(79,120+55+10,3);
	floodfill(79,120+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(21,120+55+10,3);
	floodfill(21,120+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,1);
	circle(40,145+55+13,6);
	floodfill(40,145+55+13,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(40,145+55+13,2);
	floodfill(40,145+55+13,YELLOW);
	
	setfillstyle(SOLID_FILL,1);
	circle(60,145+55+13,6);
	floodfill(60,145+55+13,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(60,145+55+13,2);
	floodfill(60,145+55+13,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(x,y+55+10,r+3);
	floodfill(x,y+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(x+2,y+66+55+10,r-4);
	floodfill(x+2,y+66+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(x+4,y+116+55+10,r-8);
	floodfill(x+4,y+116+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(x+16,y+150+55+10,r-12);
	floodfill(x+16,y+150+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(x+36,y+158+55+10,r-15);
	floodfill(x+36,y+158+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(x+52,y+159+55+10,r-16);
	floodfill(x+52,y+159+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,YELLOW);
	circle(x+62,y+159+55+10,r-18);
	floodfill(x+62,y+159+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,1);
	circle(x,y+34+55+10,r-2);
	floodfill(x,y+34+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,1);
	circle(x+2,y+92+55+10,r-6);
	floodfill(x+2,y+92+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,1);
	circle(x+8,y+136+55+10,r-10);
	floodfill(x+8,y+136+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,1);
	circle(x+44,y+158+55+10,r-15);
	floodfill(x+44,y+158+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,1);
	circle(x+26,y+156+55+10,r-14);
	floodfill(x+26,y+156+55+10,YELLOW);
	
	setfillstyle(SOLID_FILL,1);
	circle(x+58,y+159+55+10,r-17);
	floodfill(x+58,y+159+55+10,YELLOW);
	
	setcolor(1);
	arc(50,155+55+10,200,350,10);

	line(41,145+55+13,41,145+55+13);
	line(59,145+55+13,59,145+55+13);
	setcolor(WHITE);
	settextstyle(SMALL_FONT,HORIZ_DIR,4);
	outtextxy(290,70,"Hello Pilot...");
	cout << endl;
 	outtextxy(200,90,"I hope you are fine.");
	cout << endl;
	outtextxy(200,110,"As we all know Corona cases are increasing day by day");
	outtextxy(200,130 ,"So Government of India is trying to setup air ambulance in ");
	outtextxy(200,150 ,"order to take patients to hospitals as quickly as possible");
	outtextxy(200,170,"But mojority of pilots which were going to lead this mission are unwell");
	outtextxy(200,190,"As you are one of the best but retired pilots, Government of India need your help.");
	outtextxy(200,210,"Take this helicopter as far as you can in order to save the patients");
	outtextxy(200,230,"Your country needs your help. Serve it.");
	outtextxy(200,250,"We are relying on you");
	outtextxy(200,280,"Take care of yourself as well as of your patient.");
	outtextxy(290,310,"Over And Out.......");
	setcolor(1);
	setcolor(1);
	line(37,204,47,207);
	line(54,207,64,204);
}

void cloud()      //graphics code for cloud
{
	int w=100,z=50;
	setfillstyle(SOLID_FILL,WHITE);
	setcolor(15);
	arc(w+200,z,a1,a2,r);
	arc(w+10+200,z+10,a1+5,a2-90,r);
	arc(w+20+200,z+20,a1+30,a2-90,r);
	arc(w-10+200,z+10,a1+90,a2-10,r);
	arc(w-20+200,z+20,a1+90,a2-40,r);
	arc(w-29+200,z+25,a1+90,a2-40,r);
	arc(w+29+200,z+25,a1+30,a2-90,r);
	arc(w+231,z+20,180,0,5);
	arc(w+221,z+20,180,0,5);
	arc(w+211,z+20,180,0,5);
	arc(w+201,z+20,180,0,5);
	arc(w+191,z+20,180,0,5);
	arc(w+181,z+20,180,0,5);
	arc(w+171,z+20,140,0,5);
	floodfill(w+200,z+20,15);
	arc(w,z,a1,a2,r);
	arc(w+10,z+10,a1+5,a2-90,r);
	arc(w+20,z+20,a1+30,a2-90,r);
	arc(w-10,z+10,a1+90,a2-10,r);
	arc(w-20,z+20,a1+90,a2-40,r);
	arc(w-29,z+25,a1+90,a2-40,r);
	arc(w+29,z+25,a1+30,a2-90,r);
	arc(w+31,z+20,180,0,5);
	arc(w+21,z+20,180,0,5);
	arc(w+11,z+20,180,0,5);
	arc(w+01,z+20,180,0,5);
	arc(w-9,z+20,180,0,5);
	arc(w-19,z+20,180,0,5);
	arc(w-29,z+20,140,0,5);
	floodfill(w+200+200,z+20,WHITE);
	arc(w+200+200,z,a1,a2,r);
	arc(w+10+200+200,z+10,a1+5,a2-90,r);
	arc(w+20+200+200,z+20,a1+30,a2-90,r);
	arc(w-10+200+200,z+10,a1+90,a2-10,r);
	arc(w-20+200+200,z+20,a1+90,a2-40,r);
	arc(w-29+200+200,z+25,a1+90,a2-40,r);
	arc(w+29+200+200,z+25,a1+30,a2-90,r);
	arc(w+231+200,z+20,180,0,5);
	arc(w+221+200,z+20,180,0,5);
	arc(w+211+200,z+20,180,0,5);
	arc(w+201+200,z+20,180,0,5);
	arc(w+191+200,z+20,180,0,5);
	arc(w+181+200,z+20,180,0,5);
	arc(w+171+200,z+20,140,0,5);
	floodfill(w+200+200,z+20,WHITE);
}

void obstacles()       //graphics code for obstacles with x2, yc as center of ellipse of obstacle
{
	cloud();
	setfillstyle(SOLID_FILL,RED);
	setcolor(RED);
	yc+=150;
	x2-=150;
	setcolor(RED);
	ellipse(x2,yc,s,e,a,b);
	fillellipse(x2,yc,a,b);
	ellipse(x2+16,yc,s+218,e-220,a-10,b-5);
	fillellipse(x2+16,yc,a-10,b-5);
	sector(x2+26,yc,s,200-55,b,a-5);
	sector(x2+26,yc+1,200+20,y56+100,b,a-5);
	setcolor(15);
	outtextxy(x2-12,yc-3,"BOMB!");
}
void copter()       //graphics code for copter
{
	obstacles();
	int point[]={75+x,204+y,20+x,197+y,20+x,193+y,75+x,195+y,75+x,204+y}; // quadilatral of tail
	int p2[]={35+x,193+y,20+x,175+y,20+x,193+y,35+x,193+y}; //tail triangle
	int p3[]={82+x,213+y,85+x,213+y,87+x,215+y,118+x,215+y,120+x,213+y,123+x,213+y,121+x,218+y,84+x,218+y,82+x,213+y}; //stand
	int p4[]={80+x,170+y,86+x,165+y,100+x,179+y}; //p4, p5, p6, p7 are coordinates of triangle
	int p5[]={122+x,170+y,116+x,165+y,102+x,179+y};
	int p6[]={80+x,186+y,86+x,191+y,100+x,179+y};
	int p7[]={122+x,186+y,116+x,191+y,102+x,179+y};
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,GREEN);
	fillpoly(3,p4);
	fillpoly(3,p5);
	fillpoly(3,p6);
	fillpoly(3,p7);
	setfillstyle(SOLID_FILL,6);
	fillellipse(100+x,200+y,27,12);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,GREEN);
	sector(110+x,198+y,0,90,10,6);
	sector(100+x,198+y,180,90,20,6);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,6);
	fillpoly(5,point);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,GREEN);
	fillpoly(4,p2);
	setcolor(BLUE);
	line(102+x,188+y,102+x,178+y);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,GREEN);
	fillellipse(102+x,180+y,2,2);
	setcolor(BLUE);
	line(80+x,170+y,122+x,186+y);
	line(122+x,170+y,80+x,186+y);
	setcolor(BLUE);
	line(92+x,210+y,92+x,215+y);
	line(115+x,210+y,115+x,215+y);
	setfillstyle(SOLID_FILL,GREEN);
	fillpoly(9,p3);
	setcolor(3);
}
void cover()              //design for the front page
{
	
	copter();
	setbkcolor(13);
	setcolor(1);
	settextstyle(TRIPLEX_FONT,HORIZ_DIR,4);
	outtextxy(90,140,"H");
	delay(300);
	outtextxy(130,150,"E");
	delay(300);
	outtextxy(170,140,"L");
	delay(300);
	outtextxy(210,150,"L");
	delay(300);
	outtextxy(250,140,"O");
	delay(300);
	outtextxy(320,150,"P");
	delay(300);
	outtextxy(360,140,"I");
	delay(300);
	outtextxy(380,150,"L");
	delay(300);
	outtextxy(420,140,"O");
	delay(300);
	outtextxy(460,150,"T");
	delay(300);
	
	delay(5000);
	cleardevice();
}



void menu()              //displays the game menu and accepts choice
{
	setbkcolor(0);
}

void credits()
{
	menu();
	//setbkcolor(7);
	setcolor(BLUE);
	settextstyle(TRIPLEX_FONT,HORIZ_DIR,5);
	outtextxy(200,20,"CREDITS");
	//setcolor(14);
	settextstyle(TRIPLEX_FONT,HORIZ_DIR,3);
	setcolor(5);
	outtextxy(190,90,"GAME CREATORS");
	setcolor(15);
	outtextxy(20,120,"------------------------------------------------------------");
	setcolor(15);
	outtextxy(230,150,"Rohan Jasoria");
	outtextxy(300, 180, "and");
	outtextxy(190, 210, "Akshay Mungalpara");
	delay(5000);
}

void instructions()        //the game instuctions
{
	setcolor(12);
	//setbkcolor(9);
	settextstyle(TRIPLEX_FONT,HORIZ_DIR,4);
	outtextxy(50,30,"GAME INSTRUCTIONS");
	setcolor(RED);
	settextstyle(SMALL_FONT,HORIZ_DIR,5);
	outtextxy(90,100,"*");
	outtextxy(90,130,"*");
	outtextxy(90,160,"*");
	outtextxy(90,220,"*");
	outtextxy(90,280,"*");
	setcolor(15);
	outtextxy(100,100,"THE COPTER MOVES HORIZONTALLY AND VERTICALLY DOWNWARDS BY DEFAULT.");
	outtextxy(100,130,"YOU MAY PRESS ANY KEY TO MOVE THE COPTER UP.");
	outtextxy(100,160,"AT TIMES,THE COPTER PASSES OVER THE OBSTACLE WITHOUT HITTING IT");
	outtextxy(100,190,"IN THAT CASE,PLAYER CONTINUES TO PLAY THE GAME.");
	outtextxy(100,220,"SCORES ARE PROVIDED TO THE PLAYER ON THE BASIS OF THE DISTANCE");
	outtextxy(100,250,"COVERED BY THE COPTER");
	outtextxy(100,280,"IF COPTER HITS THE MISSILE,THE GAME IS OVER");
	delay(5000);
}

void player::accept()
{
	cleardevice();
	menu();
	//setbkcolor(11);
	setcolor(RED);
	outtextxy(100,100,"ENTER YOUR NAME: ");
	cin>>name;
	outtextxy(300,100,name);
	delay(1000);
}


int player::score(long int m)
{
	points = 0;
	for(int i = 0;i < m;i += 5)
		points += 1;
	distance = m;
	return points;
}


int player::mycopter(int x,int y)
{
	settextstyle(DEFAULT_FONT,HORIZ_DIR,1); // x1, x2, x3, x4, yc1, yc2, yc3, yc -> obstacle
	int pt[] = {x2-27,yc,x2-27,yc-2,x2-26,yc-4,x2-25,yc-6,x2-23,yc-8,x2-21,yc-10,x2-19,yc-12,x2-15,yc-14,x2-9,yc-16,x2-4,yc-17,x2-1,yc-17,x2,yc-17,x2+2,yc-17,x2+4,yc-17,x2+7,yc-16,x2+11,yc-15,x2+13,yc-15,x2+15,yc-17,x2+17,yc-18,x2+19,yc-20,x2+21,yc-21,x2+23,yc-22,x2+25,yc-22,x2+27,yc-22,x2+29,yc-22,x2+31,yc-21,x2+33,yc-20,x2+35,yc-19,x2+38,yc-16,x2+37,yc-14,x2+36,yc-12,x2+34,yc-11,x2+34,yc-10,x2+33,yc-10,x2+31,yc-6,x2+32,yc-4,x2+33,yc-1,x2+33,yc+2,x2+32,yc+4,x2+31,yc+7,x2+32,yc+11,x2+33,yc+14,x2+35,yc+17,x2+34,yc+21,x2+30,yc+22,x2+27,yc+23,x2+24,yc+23,x2+21,yc+22,x2+18,yc+21,x2+16,yc+19,x2+13,yc+16,x2+10,yc+16,x2+6,yc+17,x2+3,yc+17,x2,yc+17,x2-3,yc+17,x2-6,yc+17,x2-10,yc+16,x2-14,yc+15,x2-18,yc+13,x2-22,yc+10,x2-26,yc+6,x2-27,yc+3,x2-27,yc};
	int pt1[] = {x1-27,yc1,x1-27,yc1-2,x1-26,yc1-4,x1-25,yc1-6,x1-23,yc1-8,x1-21,yc1-10,x1-19,yc1-12,x1-15,yc1-14,x1-9,yc1-16,x1-4,yc1-17,x1-1,yc1-17,x1,yc1-17,x1+2,yc1-17,x1+4,yc1-17,x1+7,yc1-16,x1+11,yc1-15,x1+13,yc1-15,x1+15,yc1-17,x1+17,yc1-18,x1+19,yc1-20,x1+21,yc1-21,x1+23,yc1-22,x1+25,yc1-22,x1+27,yc1-22,x1+29,yc1-22,x1+31,yc1-21,x1+33,yc1-20,x1+35,yc1-19,x1+38,yc1-16,x1+37,yc1-14,x1+36,yc1-12,x1+34,yc1-11,x1+34,yc1-10,x1+33,yc1-10,x1+31,yc1-6,x1+32,yc1-4,x1+33,yc1-1,x1+33,yc1+2,x1+32,yc1+4,x1+31,yc1+7,x1+32,yc1+11,x1+33,yc1+14,x1+35,yc1+17,x1+34,yc1+21,x1+30,yc1+22,x1+27,yc1+23,x1+24,yc1+23,x1+21,yc1+22,x1+18,yc1+21,x1+16,yc1+19,x1+13,yc1+16,x1+10,yc1+16,x1+6,yc1+17,x1+3,yc1+17,x1,yc1+17,x1-3,yc1+17,x1-6,yc1+17,x1-10,yc1+16,x1-14,yc1+15,x1-18,yc1+13,x1-22,yc1+10,x1-26,yc1+6,x1-27,yc1+3,x1-27,yc1};
	int pt2[] = {x3-27,yc2,x3-27,yc2-2,x3-26,yc2-4,x3-25,yc2-6,x3-23,yc2-8,x3-21,yc2-10,x3-19,yc2-12,x3-15,yc2-14,x3-9,yc2-16,x3-4,yc2-17,x3-1,yc2-17,x3,yc2-17,x3+2,yc2-17,x3+4,yc2-17,x3+7,yc2-16,x3+11,yc2-15,x3+13,yc2-15,x3+15,yc2-17,x3+17,yc2-18,x3+19,yc2-20,x3+21,yc2-21,x3+23,yc2-22,x3+25,yc2-22,x3+27,yc2-22,x3+29,yc2-22,x3+31,yc2-21,x3+33,yc2-20,x3+35,yc2-19,x3+38,yc2-16,x3+37,yc2-14,x3+36,yc2-12,x3+34,yc2-11,x3+34,yc2-10,x3+33,yc2-10,x3+31,yc2-6,x3+32,yc2-4,x3+33,yc2-1,x3+33,yc2+2,x3+32,yc2+4,x3+31,yc2+7,x3+32,yc2+11,x3+33,yc2+14,x3+35,yc2+17,x3+34,yc2+21,x3+30,yc2+22,x3+27,yc2+23,x3+24,yc2+23,x3+21,yc2+22,x3+18,yc2+21,x3+16,yc2+19,x3+13,yc2+16,x3+10,yc2+16,x3+6,yc2+17,x3+3,yc2+17,x3,yc2+17,x3-3,yc2+17,x3-6,yc2+17,x3-10,yc2+16,x3-14,yc2+15,x3-18,yc2+13,x3-22,yc2+10,x3-26,yc2+6,x3-27,yc2+3,x3-27,yc2};
	int pt3[] = {x4-27,yc3,x4-27,yc3-2,x4-26,yc3-4,x4-25,yc3-6,x4-23,yc3-8,x4-21,yc3-10,x4-19,yc3-12,x4-15,yc3-14,x4-9,yc3-16,x4-4,yc3-17,x4-1,yc3-17,x4,yc3-17,x4+2,yc3-17,x4+4,yc3-17,x4+7,yc3-16,x4+11,yc3-15,x4+13,yc3-15,x4+15,yc3-17,x4+17,yc3-18,x4+19,yc3-20,x4+21,yc3-21,x4+23,yc3-22,x4+25,yc3-22,x4+27,yc3-22,x4+29,yc3-22,x4+31,yc3-21,x4+33,yc3-20,x4+35,yc3-19,x4+38,yc3-16,x4+37,yc3-14,x4+36,yc3-12,x4+34,yc3-11,x4+34,yc3-10,x4+33,yc3-10,x4+31,yc3-6,x4+32,yc3-4,x4+33,yc3-1,x4+33,yc3+2,x4+32,yc3+4,x4+31,yc3+7,x4+32,yc3+11,x4+33,yc3+14,x4+35,yc3+17,x4+34,yc3+21,x4+30,yc3+22,x4+27,yc3+23,x4+24,yc3+23,x4+21,yc3+22,x4+18,yc3+21,x4+16,yc3+19,x4+13,yc3+16,x4+10,yc3+16,x4+6,yc3+17,x4+3,yc3+17,x4,yc3+17,x4-3,yc3+17,x4-6,yc3+17,x4-10,yc3+16,x4-14,yc3+15,x4-18,yc3+13,x4-22,yc3+10,x4-26,yc3+6,x4-27,yc3+3,x4-27,yc3};
	if(x4 == 350)
		k = x4; //k = 350
	if(c == 0 && x4 == 350)
	{
		x4=0;
		c++;
	} //c = 1, x4 = 0
	if(k>=350)
	{
		setfillstyle(SOLID_FILL,RED);
		setcolor(RED);
		ellipse(x1,yc1,s,e,a,b);
		fillellipse(x1,yc1,a,b);
		ellipse(x1+16,yc1,s+218,e-220,a-10,b-5);
		fillellipse(x1+16,yc1,a-10,b-5);
		sector(x1+26,yc1,s,y56-55,b,a-5);
		sector(x1+26,yc1+1,y56+20,y56+100,b,a-5);
		setcolor(15);
		outtextxy(x1-12,yc1-3,"BOOM!");
		k++;
		x1-=5;
	} // obstacle1 created using x1, yc1, x1 = 345, k = 351
	if(x1==350)
		j=x1;
	if(j>=350)
	{
		setfillstyle(SOLID_FILL,RED);
		setcolor(RED);
		ellipse(x2,yc,s,e,a,b);
		fillellipse(x2,yc,a,b);
		ellipse(x2+16,yc,s+218,e-220,a-10,b-5);
		fillellipse(x2+16,yc,a-10,b-5);
		sector(x2+26,yc,s,y56-55,b,a-5);
		sector(x2+26,yc+1,y56+20,y56+100,b,a-5);
		setcolor(15);
		outtextxy(x2-12,yc-3,"BOOM!");
		j++;
		x2-=5;
	}
	if(x2==350)
		f=x2; //f = 350
	if(f>=350)
	{
		setfillstyle(SOLID_FILL,RED);
		setcolor(RED);
		ellipse(x3,yc2,s,e,a,b);
		fillellipse(x3,yc2,a,b);
		ellipse(x3+16,yc2,s+218,e-220,a-10,b-5);
		fillellipse(x3+16,yc2,a-10,b-5);
		sector(x3+26,yc2,s,y56-55,b,a-5);
		sector(x3+26,yc2+1,y56+20,y56+100,b,a-5);
		setcolor(15);
		outtextxy(x3-12,yc2-3,"BOOM!");
		f++;
		x3-=5;
	} // obstacle 2 created with x3, yc2, x3 = 345, f = 351
	if(x3==350)
		d=x3;
	if(d>=350)
	{
		setfillstyle(SOLID_FILL,RED);
		setcolor(RED);
		ellipse(x4,yc3,s,e,a,b);
		fillellipse(x4,yc3,a,b);
		ellipse(x4+16,yc3,s+218,e-220,a-10,b-5);
		fillellipse(x4+16,yc3,a-10,b-5);
		sector(x4+26,yc3,s,y56-55,b,a-5);
		sector(x4+26,yc3+1,y56+20,y56+100,b,a-5);
		setcolor(15);
		outtextxy(x4-12,yc3-3,"BOOM!");
		d++;
		x4-=5;
	}
	
	//drawn helicopter
	int point[]={75+x,204+y,20+x,197+y,20+x,193+y,75+x,195+y,75+x,204+y};
	int p2[]={35+x,193+y,20+x,175+y,20+x,193+y,35+x,193+y};
	int p3[]={82+x,213+y,85+x,213+y,87+x,215+y,118+x,215+y,120+x,213+y,123+x,213+y,121+x,218+y,84+x,218+y,82+x,213+y};
	int p4[]={80+x,170+y,86+x,165+y,100+x,179+y};
	int p5[]={122+x,170+y,116+x,165+y,102+x,179+y};
	int p6[]={80+x,186+y,86+x,191+y,100+x,179+y};
	int p7[]={122+x,186+y,116+x,191+y,102+x,179+y};
	//setbkcolor(9);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,GREEN);
	fillpoly(3,p4);
	fillpoly(3,p5);
	fillpoly(3,p6);
	fillpoly(3,p7);
	setfillstyle(SOLID_FILL,6);
	fillellipse(100+x,200+y,27,12);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,GREEN);
	sector(110+x,198+y,0,90,10,6);
	sector(100+x,198+y,180,90,20,6);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,6);
	fillpoly(5,point);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,GREEN);
	fillpoly(4,p2);
	setcolor(BLUE);
	line(102+x,188+y,102+x,178+y);
	setcolor(BLUE);
	setfillstyle(SOLID_FILL,GREEN);
	fillellipse(102+x,180+y,2,2);
	setcolor(BLUE);
	line(80+x,170+y,122+x,186+y);
	line(122+x,170+y,80+x,186+y);
	setcolor(BLUE);
	setcolor(BLUE);
	line(92+x,210+y,92+x,215+y);
	line(115+x,210+y,115+x,215+y);
	setfillstyle(SOLID_FILL,GREEN);
	fillpoly(9,p3);
	setcolor(3);
	
	//  outline of copter
	int outline[]={100+x,200+y,18+x,y+199,18+x,y+197,x+18,y+194,18+x,195+y,18+x,196+y,x+18,y+193,x+18,y+192,x+18,y+191,x+18,y+175,x+18,y+174,x+18,y+173,x+18,y+172,x+18,y+171,x+18,y+170,x+36,y+191,x+37,y+191,x+38,y+191,x+39,y+191,x+40,y+191,x+41,y+191,x+42,y+191,x+43,y+191,x+44,y+191,x+45,
	y+191,x+46,y+191,x+47,y+191,x+48,y+191,x+49,y+191,x+50,y+191,x+71,y+193,x+82,y+190,x+78,y+186,x+78,y+185,x+78,y+184,x+78,y+183,x+78,y+182,x+78,y+181,x+78,y+180,x+78,y+176,
	x+78,y+175,x+78,y+174,x+78,y+173,x+178,y+172,x+78,y+171,x+78,y+170,x+78,y+168,x+86,y+163,x+87,y+163,x+88,y+163,x+89,y+163,x+90,y+163,x+91,y+163,x+92,y+163,x+93,y+163,x+94,y+163,x+95,y+163,x+96,y+163,x+97,y+163,x+98,y+163,x+99,y+163,x+100,y+163,x+101,y+163,x+102,y+163,x+105,y+163,x+108,y+163,x+112,y+163,x+116,y+163,x+124,y+170,x+124,y+175,x+124,y+178,x+124,y+182,x+124,y+186,x+120,y+188,x+130,y+198,x+125,y+218,x+127,y+218,x+125,y+220,x+124,y+220,x+123,y+220,x+122,y+220,x+121,y+220,x+120,y+220,x+119,y+220,x+118,y+220,x+117,y+220,x+116,y+220,x+115,y+220,x+114,y+220,x+113,y+220,x+112,y+220,x+111,y+220,110+x,y+220,x+109,y+220,x+108,y+220,x+107,y+220,x+106,y+220,x+105,y+220,x+104,y+220,x+103,y+220,x+102,y+220,x+101,y+220,x+100,y+220,x+99,y+220,x+98,y+220,x+97,y+220,x+96,y+220,x+95,y+220,x+94,y+220,x+93,y+220,x+92,y+220,x+91,y+220,x+90,y+220,x+89,y+220,x+88,y+220,x+87,y+220,x+86,y+220,x+85,y+220,x+84,y+220,x+83,y+220,x+82,y+220,x+81,y+220,x+80,y+220,x+79,y+220,x+78,y+220,x+77,y+220,x+76,y+215,
	x+82,y+220,x+75,y+208,x+74,y+208,x+73,y+207,x+72,y+207,x+71,y+207,x+70,y+207,x+65,y+206,x+60,y+205,x+55,y+204,x+50,y+203,x+45,y+202,x+40,y+201,x+35,y+200,18+x,199+y,82+x,213+y,85+x,213+y,87+x,215+y,118+x,215+y,120+x,213+y,123+x,213+y,121+x,218+y,84+x,218+y,82+x,213+y,100+x,200+y,110+x,198+y,100+x,198+y};
	
	//checking if obstacle and outline of copter coincides
	for(int i=0;i<140;i+=2)
		for(int j=0;j<66;j+=2)
			if(outline[i]==pt[j]&&outline[i+1]==pt[j+1])
				return 1;
	for( i=0;i<140;i+=2)
		for( j=0;j<66;j+=2)
			if(outline[i]==pt1[j]&&outline[i+1]==pt1[j+1])
				return 1;
	for( i=0;i<140;i+=2)
		for( j=0;j<66;j+=2)
			if(outline[i]==pt2[j]&&outline[i+1]==pt2[j+1])
				return 1;
	for( i=0;i<140;i+=2)
		for( j=0;j<66;j+=2)
			if(outline[i]==pt3[j]&&outline[i+1]==pt3[j+1])
				return 1;
	return 0;
}

void getchoice()       //gets the choice from the player
{
	cloud();
	setbkcolor(0);
	setcolor(WHITE);
	int choice;
	settextstyle(SANS_SERIF_FONT ,HORIZ_DIR,1);
	outtextxy(220,100,"1.NEW GAME");
	outtextxy(220,130,"2.GAME INSTRUCTIONS");
	outtextxy(220,160,"3.ABOUT THE GAME");
	outtextxy(220,190,"4.CREDITS");
	outtextxy(220,220,"5.EXIT");
	
	setcolor(RED);
	settextstyle(SANS_SERIF_FONT  ,HORIZ_DIR,1);
	outtextxy(70,320,"(ENTER THE CHOICE AND PRESS ENTER TO SEE YOUR CHOICE)");
	setcolor(MAGENTA);
	settextstyle(SANS_SERIF_FONT ,HORIZ_DIR,1);
	outtextxy(190,290,"ENTER YOUR CHOICE: ");
	cin>>choice;
	o=choice;
	char ch[10];
	itoa(choice,ch,10);
	outtextxy(400,290,ch);
	delay(2000);
}

int main()
{
// clrscr();
	long int m=0;
	initwindow(700, 500);
	cover();
	o=1;
	while(o==1||o==2||o==3||o==4)
	{
		cleardevice();
		//setbkcolor(0);
		getchoice();
		while(o == 1)
		{
			cleardevice();
			player obj;
			obj.accept();
			x=20,y=80;
			x2=500, a=25, b=15, s=50, e=310, x1=500, x3=500, x4=350, y56=200;
			k=0, j=0, f=0, d=0, c=0, yc1, yc2, yc3, yc=250;
			yc1 = 50 + random(100);
			yc = 150 + random(200);
			yc2 = 50 + random(300);
			yc3 = 100 + random(200);
			cleardevice();
			obj.mycopter(x,y);
			char abc='y';
			setcolor(RED);
			settextstyle(TRIPLEX_FONT,HORIZ_DIR,2);
			outtextxy(160,200,"PRESS Y TO START!!!!");
			cin>>abc;
			delay(2000);
			if(abc=='y'||abc=='Y')
			{
				while(y<300&&y>-170)
				{
					//cout << x << " " << x2 << " " << yc << endl;
					//cout << y << endl;
					obstacles();
					if(x1 == 0)
					{
						x1 = 500;
						yc1 = 50 + random(200);
						k = 0;
					}
					if(x2 < 0) //changed x2 value to 50 from 0
					{	
						x2 = 500;
						yc = 150 + random(200);
						j = 0;
					}
					if(x3 == 0)
					{
						x3 = 500;
						yc2 = 200 + random(200);
						f = 0;
					}
					if(x4 == 0)
					{
						x4=500;
						yc3 = 300+random(200);
						d = 0;
					}
					if(x == 400)
					{
						x=0;
						x1 = i;
						x1 += 200;
						x2 += 200;
						x3 += 200;
						x4 += 200;
						yc1 = 50 + random(200);
						yc = 150 + random(200);
						yc2 = 200 + random(200);
						yc3 = 300 + random(200);
					}
					if(!kbhit())
					{
						x += 2;
						y += 5;
						if(obj.mycopter(x,y))
						break;
					}
					else
					{
						getch();
						cleardevice();
						x += 2;
						y -= 8;
						if(obj.mycopter(x,y))
							break;
						delay(20);
					}
					delay(20);
					i=x1-x;
					cleardevice();
					m++;
				}
				char ch[20];
				obj.score(m);
				m=0;
				itoa(obj.getpoints(),ch,10);
				obj.mycopter(x,y);
				setcolor(15);
				settextstyle(SANS_SERIF_FONT,HORIZ_DIR,5);
				outtextxy(180,100,"GAME OVER!!!!");
				outtextxy(180,200,"SCORE:");
				outtextxy(360,200,ch);
				delay(5000);
				cleardevice();
				obj.mycopter(x,y);
				cleardevice();
			}
			cleardevice();
			menu();
			getchoice();
		}
		while(o == 2)
		{
			cleardevice();
			instructions();
			delay(10000);
			cleardevice();
			menu();
			getchoice();
		}
		while(o==3)
		{
			cleardevice();
			about_Game();
			delay(20000);
			cleardevice();
			menu();
			getchoice();
		}
		while(o==4)
		{
			cleardevice();
			credits();
			delay(10000);
			cleardevice();
			menu();
			getchoice();
		}
	}
	if(o==5)
		exit(0);
	delay(1000);
	getch();
	closegraph();
	getch();
}
